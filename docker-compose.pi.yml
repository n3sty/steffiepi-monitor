version: '3.8'

services:
  monitor:
    build:
      context: .
      dockerfile: apps/monitor/Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - HOST=0.0.0.0
      - LOG_LEVEL=info
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc:/host/etc:ro
    restart: unless-stopped
    networks:
      - steffiepi
    # For Pi: limit resources to prevent overwhelming
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONITOR_MODE=real
      - NEXT_PUBLIC_MONITOR_MODE=real
      - MONITOR_API_URL=http://monitor:3001
      - MONITOR_WEBSOCKET_URL=ws://monitor:3001
    depends_on:
      - monitor
    restart: unless-stopped
    networks:
      - steffiepi
    # For Pi: limit resources
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

networks:
  steffiepi:
    driver: bridge

# Optional: Add healthchecks and logging
x-healthcheck-defaults: &healthcheck-defaults
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s

# Add healthchecks to services
services:
  monitor:
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/health", "||", "exit", "1"]
      
  web:
    healthcheck:
      <<: *healthcheck-defaults
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000", "||", "exit", "1"]